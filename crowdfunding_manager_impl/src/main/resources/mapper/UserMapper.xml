<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hh.crowdfunding.manager.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.hh.crowdfunding.domain.User">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="loginacct" jdbcType="VARCHAR" property="loginacct"/>
        <result column="userpswd" jdbcType="CHAR" property="userpswd"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="createtime" jdbcType="CHAR" property="createtime"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
    insert into t_user (id, loginacct, userpswd, 
      username, email, createtime
      )
    values (#{id,jdbcType=INTEGER}, #{loginacct,jdbcType=VARCHAR}, #{userpswd,jdbcType=CHAR}, 
      #{username,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{createtime,jdbcType=CHAR}
      )
  </insert>
    <update id="updateByPrimaryKey" parameterType="com.hh.crowdfunding.domain.User">
        update t_user
        <set>
            <if test='loginacct!=null and loginacct.trim!=""'>
                loginacct = #{loginacct,jdbcType=VARCHAR},
            </if>
            <if test='userpswd!=null and userpswd.trim!=""'>
                userpswd = #{userpswd,jdbcType=VARCHAR},
            </if>
            <if test='username!=null and username.trim!=""'>
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test='email!=null and email.trim!=""'>
                email = #{email,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap" flushCache="true">
    select id, loginacct, userpswd, username, email, createtime
    from t_user
    where id = #{id,jdbcType=INTEGER}
  </select >
    <select id="selectAll" resultMap="BaseResultMap">
    select id, loginacct, userpswd, username, email, createtime
    from t_user
  </select>
    <select id="selectByLoginacctAndUserpswd" resultType="com.hh.crowdfunding.domain.User" parameterType="map">
    select id, loginacct, userpswd, username, email, createtime
    from t_user WHERE loginacct=#{loginacct} AND userpswd=#{userpswd}
  </select>
    <select id="findByUsername" resultType="com.hh.crowdfunding.domain.User">
      select id, loginacct, userpswd, username, email, createtime
    from t_user WHERE username LIKE "%"#{username}"%"
    </select>
    <select id="findByEmail" resultType="com.hh.crowdfunding.domain.User">
        select id, loginacct, userpswd, username, email, createtime
    from t_user WHERE email LIKE "%"#{email}"%"
    </select>

    <select id="findByLoginacct" resultType="com.hh.crowdfunding.domain.User">
        select id, loginacct, userpswd, username, email, createtime
    from t_user WHERE loginacct = #{loginacct}
    </select>
    <select id="findRoleIdByUserId" resultType="java.lang.Integer">
        SELECT roleid FROM t_user_role WHERE userid=#{id}
    </select>

</mapper>